{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;ACR5D,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,cAAc,CAAC;KACxB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,uEAAM;QACJ,yEAAqB;QAGrB,yEAAyB;QACvB,2EAAuB;QACrB,qEAAI;QACF,qEAAI;QACF,wEAAiB;QAAA,wEAAa;QAAA,4DAAK;QACnC,oEAAG;QAAA,yJAA8F;QAAA,4DAAI;QACrG,qEAAG;QAAA,yHAA6D;QAAA,4DAAI;QACtE,4DAAK;QACP,4DAAK;QACP,4DAAQ;QACV,4DAAM;QACN,iEAAI;QAEJ,0EAA4B;QAC1B,sEAAI;QAAA,qEAAS;QAAA,4DAAK;QAEhB,qEAAG;QAAA,2GAA+C;QAAA,4DAAI;QACtD,qEAAG;QAAA,kFAAsB;QAAA,4DAAI;QAC7B,qEAAG;QAAA,sFAA0B;QAAA,4DAAI;QACjC,8DAAC;QAAA,qEAAG;QAAA,sEAAU;QAAA,4DAAI;QAEtB,4DAAM;QACN,iEAAI;QACJ,0EAA4B;QAC1B,sEAAI;QAAA,gFAAoB;QAAA,4DAAK;QAC7B,qEAAG;QAAA,0fAA8b;QAAA,4DAAI;QACvc,4DAAM;QACN,iEAAI;QACJ,0EAA6B;QAC3B,qEAAG;QAAA,wEAAY;QAAA,4DAAI;QACjB,qEAAG;QAAC,wEAA0B;QAAA,uEAAW;QAAA,4DAAI;QAAA,4DAAI;QAGrD,4DAAM;QACN,4DAAM;QAtCR,4DAAM;;;;;;;;;;;;;;ACCN;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEX;;AAYxC,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FADb,EAAE,YAHJ;YACP,uEAAa;SACd;mIAIU,SAAS,mBARlB,2DAAY,aAGZ,uEAAa;;;;;;;;;;;;;;;;;;;ACV8B;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'covidangular';\n}\n","<body>\n  <div class=\"content\">\n\n\n  <div class=\"Top_Section\">\n    <table class=\"center\" >\n      <tr>\n        <th>\n          <h1 id=\"Heading\">Covid Project</h1>\n          <p>The goal of this project is to inform people about the current situation of COVID-19 in Mexico</p>\n          <p>We aim to give free and accurate access to vital information </p>\n        </th>\n      </tr>\n    </table>\n  </div>\n  <hr>\n\n  <div class=\"Middle_section\">\n    <h2>COVID MAP</h2>\n\n      <p>Hover over each state to get more specific info</p>\n      <p>The info is up to date</p>\n      <p>For more details clic here</p>\n      <<p>extra info</p>\n\n  </div>\n  <hr>\n  <div class=\"Bottom_section\">\n    <h2>Additional resources</h2>\n    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n  </div>\n  <hr>\n  <div class=\"Contact_section\">\n    <p>Contact info</p>\n      <p> <a href=\"contact_me.html\">Contact me!</a></p>\n\n\n  </div>\n  </div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}